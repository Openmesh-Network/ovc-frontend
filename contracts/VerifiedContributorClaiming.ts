export const VerifiedContributorClaimingContract = {
  address: "0x1D25F7b302159015486b001b0d2A5327744132dE",
  abi: [
    {
      type: "constructor",
      inputs: [
        {
          name: "_token",
          type: "address",
          internalType: "contract IERC20MintBurnable",
        },
        {
          name: "_tokenSpendingLimit",
          type: "uint256",
          internalType: "uint256",
        },
        {
          name: "_spendingPeriodDuration",
          type: "uint256",
          internalType: "uint256",
        },
        { name: "_signer", type: "address", internalType: "address" },
      ],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "claim",
      inputs: [
        { name: "_v", type: "uint8", internalType: "uint8" },
        { name: "_r", type: "bytes32", internalType: "bytes32" },
        { name: "_s", type: "bytes32", internalType: "bytes32" },
        { name: "_proofId", type: "uint256", internalType: "uint256" },
        { name: "_claimer", type: "address", internalType: "address" },
        { name: "_amount", type: "uint256", internalType: "uint256" },
      ],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "currentSpendingPeriod",
      inputs: [],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "currentTokenSpending",
      inputs: [],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "eip712Domain",
      inputs: [],
      outputs: [
        { name: "fields", type: "bytes1", internalType: "bytes1" },
        { name: "name", type: "string", internalType: "string" },
        { name: "version", type: "string", internalType: "string" },
        { name: "chainId", type: "uint256", internalType: "uint256" },
        { name: "verifyingContract", type: "address", internalType: "address" },
        { name: "salt", type: "bytes32", internalType: "bytes32" },
        { name: "extensions", type: "uint256[]", internalType: "uint256[]" },
      ],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "owner",
      inputs: [],
      outputs: [{ name: "", type: "address", internalType: "address" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "proofClaimed",
      inputs: [{ name: "proofId", type: "uint256", internalType: "uint256" }],
      outputs: [{ name: "claimed", type: "bool", internalType: "bool" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "renounceOwnership",
      inputs: [],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "spendingPeriodDuration",
      inputs: [],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "token",
      inputs: [],
      outputs: [
        {
          name: "",
          type: "address",
          internalType: "contract IERC20MintBurnable",
        },
      ],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "tokenSpendingLimit",
      inputs: [],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "transferOwnership",
      inputs: [{ name: "newOwner", type: "address", internalType: "address" }],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "updateSpendingLimit",
      inputs: [
        {
          name: "_tokenSpendingLimit",
          type: "uint256",
          internalType: "uint256",
        },
        {
          name: "_spendingPeriodDuration",
          type: "uint256",
          internalType: "uint256",
        },
      ],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "event",
      name: "EIP712DomainChanged",
      inputs: [],
      anonymous: false,
    },
    {
      type: "event",
      name: "OwnershipTransferred",
      inputs: [
        {
          name: "previousOwner",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "newOwner",
          type: "address",
          indexed: true,
          internalType: "address",
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "TokensClaimed",
      inputs: [
        {
          name: "account",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "amount",
          type: "uint256",
          indexed: false,
          internalType: "uint256",
        },
      ],
      anonymous: false,
    },
    { type: "error", name: "ECDSAInvalidSignature", inputs: [] },
    {
      type: "error",
      name: "ECDSAInvalidSignatureLength",
      inputs: [{ name: "length", type: "uint256", internalType: "uint256" }],
    },
    {
      type: "error",
      name: "ECDSAInvalidSignatureS",
      inputs: [{ name: "s", type: "bytes32", internalType: "bytes32" }],
    },
    { type: "error", name: "InvalidProof", inputs: [] },
    { type: "error", name: "InvalidShortString", inputs: [] },
    {
      type: "error",
      name: "OwnableInvalidOwner",
      inputs: [{ name: "owner", type: "address", internalType: "address" }],
    },
    {
      type: "error",
      name: "OwnableUnauthorizedAccount",
      inputs: [{ name: "account", type: "address", internalType: "address" }],
    },
    { type: "error", name: "ProofAlreadyClaimed", inputs: [] },
    { type: "error", name: "SenderIsNotOpenmeshAdmin", inputs: [] },
    {
      type: "error",
      name: "StringTooLong",
      inputs: [{ name: "str", type: "string", internalType: "string" }],
    },
    { type: "error", name: "TokenSpendingLimitReached", inputs: [] },
  ],
} as const;
